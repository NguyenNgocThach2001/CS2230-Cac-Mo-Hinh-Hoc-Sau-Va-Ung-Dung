Thầy Tiệp (Sẽ bắt buộc đặt câu hỏi)

Tỉ lệ điểm của môn:
Bài tập: 3 (Bài tập sẽ nộp lên hệ thống, có chấm điểm tự động, không quá khó).
Đồ án nhóm: 3 (Sẽ cung cấp danh sách đề tài).
Thi cuối kỳ: 4 
  - Thi viết.
  - Lý thuyết: ví dụ: overfitting là gì, gradient vanishing là gì.
  - Coding: code trên giấy, đảm bảo làm trong phần bài tập.
  - Ứng dụng: ví dụ: cho trường hợp thực tế, trình bày cách xây dựng mô hình phù hợp dựa trên trường hợp đó.
	+ Phân tích bài toán.
	+ Dữ liệu lấy ở đâu, chuẩn bị thế nào?
	+ Chọn mô hình gì cho phù hợp?
	+ Đánh giá kết quả đã train như thế nào?

Sách thầy gợi ý: 
- Deep learning  (của tác giả vừa nhận giải Vin gì đó).

-----------------------------------------------------------------------------------------------------------------------------------
Các nền tảng cần có khi học môn này:
Toán: 
- Đại số tuyến tính, + - * / ma trận. Vì tất cả dữ liệu đều được biểu diễn dưới dạng vector hoặc ma trận (ảnh, text, âm thanh).
- Giải tích: đạo hàm. Vì các mô hình máy học mình sẽ chủ yếu giải quyết bài toán tối ưu => cần học đạo hàm.
Shallow models cần coi lại: 
- Linear Reg 
- Logistic Reg
- SoftMax Reg
...
-------------------------------------------------------------------------------------------------------------------------------------

Các quy mô dữ liệu hiện tại:
  Data set  
  Large - scale dataset (Môn này đầu ra chỉ ở mức độ này)
  Internet scale dataset. (Môn này ở đây thì chỉ finetune, chỉ train các ngạch hẹp).

-----------------------------------------------------------------------
Nội dung chính môn sẽ học: 
Ảnh: 
- CNN
- ViT

Văn bản: 
- RNN
- Attention
- Transformer BERT, GPT, TS
-----------------------------------------------------------------------


----------------------------------------------------------------------
Các câu hỏi trong lớp học (từ học viên):
CH1: Làm sao tránh overfitting? Dùng nhiều độ đo khác nhau để đánh giá mô hình. Hoặc Early Stopping. Xử lý dữ liệu (noise)?
=>
2 hướng hay sử dụng:
1. Tăng thêm kích thước dữ liệu.
2. Giảm độ phức tạp mô hình.
CH2: Dùng API của các cty lớn hay tự host model?
=> thông thường thích dùng API hơn vì đơn giản, ít chi phí, hiệu quả.
Còn nhiều lắm note không nổi
----------------------------------------------------------------------

-----------------------------------------------------------------------
Nhìn ván đề:
- Problem -> why -> solution. 
- cần di chuyển từ A -> B mua nước suối, chọn đi bộ, mỏi chân -> dùng sức của mình nhiều -> đi xe ngựa.
- đi xe ngựa từ A -> B, ngựa mỏi chân -> dùng sức ngựa nhiều -> đi xe máy.
- đi xe máy từ A -> B sang tỉnh khác, không an toàn -> vì mưa, bụi, nắng, ... -> đi ô tô.
- đi ô tô từ A -> B sang nước, không di chuyển được qua địa hình phức tạp như núi, sông, biển, ... -> Vì xe phải bám vào mặt đường chạy được -> đi máy bay.

------------------------------------------------------------------------


Nền tảng đại số tuyến tính:
- Scalar, vector, matrix, tensor.
	+ Scalar: những giá trị vô hướng, ký hiệu viết thường.
	+ Vector: biểu diễn dữ liệu có nhiều chiều gồm: vận tốc, lực, điểm, ... ký hiệu viết thường và in đậm. vector mặc định sẽ ở dạng cột.
	+ Matrix: gồm nhiều vector, ký hiệu viết hoa.
	+ Tensor: A thuộc Rmxnxp. gồm nhiều hần tử được bố trí vào một không gian nhiều hơn 2 chiều. Ký hiệu viết hoa in đậm.
- Tổng 2 vector.
- Nhân 2 vector.
- Tích vô hướng 2 vector.
Ví dụ minh họa nhân 2 vector	:
- Cho 2 vector x^T và y. (x^T ngang, y dọc).
- Vector x biểu hiện số tín chỉ của các môn học.
- Vector y biểu hiện kết quả thi của môn học.
- Vector kết quả là tín chỉ * điểm thi
x^T.y = [3 3 4 2 1] . |9| = 
		      |6|
		      |5|
		      |8|
		      |1|
- Một số dạng dữ liệu thực tế.
- 
